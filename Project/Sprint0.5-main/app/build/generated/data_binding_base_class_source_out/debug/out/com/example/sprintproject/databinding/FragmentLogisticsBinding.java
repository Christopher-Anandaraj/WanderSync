// Generated by view binder compiler. Do not edit!
package com.example.sprintproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sprintproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLogisticsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton buttonAddContributors;

  @NonNull
  public final ImageButton buttonNotes;

  @NonNull
  public final ConstraintLayout fragmentLogistics;

  @NonNull
  public final TextView textContributors;

  @NonNull
  public final TextView textLogistics;

  private FragmentLogisticsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton buttonAddContributors, @NonNull ImageButton buttonNotes,
      @NonNull ConstraintLayout fragmentLogistics, @NonNull TextView textContributors,
      @NonNull TextView textLogistics) {
    this.rootView = rootView;
    this.buttonAddContributors = buttonAddContributors;
    this.buttonNotes = buttonNotes;
    this.fragmentLogistics = fragmentLogistics;
    this.textContributors = textContributors;
    this.textLogistics = textLogistics;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLogisticsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLogisticsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_logistics, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLogisticsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_add_contributors;
      ImageButton buttonAddContributors = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddContributors == null) {
        break missingId;
      }

      id = R.id.button_notes;
      ImageButton buttonNotes = ViewBindings.findChildViewById(rootView, id);
      if (buttonNotes == null) {
        break missingId;
      }

      ConstraintLayout fragmentLogistics = (ConstraintLayout) rootView;

      id = R.id.text_contributors;
      TextView textContributors = ViewBindings.findChildViewById(rootView, id);
      if (textContributors == null) {
        break missingId;
      }

      id = R.id.text_logistics;
      TextView textLogistics = ViewBindings.findChildViewById(rootView, id);
      if (textLogistics == null) {
        break missingId;
      }

      return new FragmentLogisticsBinding((ConstraintLayout) rootView, buttonAddContributors,
          buttonNotes, fragmentLogistics, textContributors, textLogistics);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
