// Generated by view binder compiler. Do not edit!
package com.example.sprintproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sprintproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddContributorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonAdd;

  @NonNull
  public final Button buttonCancel;

  @NonNull
  public final EditText editTextUsername;

  @NonNull
  public final TextView textAddContributors;

  @NonNull
  public final TextView textEnterUsername;

  @NonNull
  public final LinearLayout usernameEntry;

  private FragmentAddContributorBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonAdd, @NonNull Button buttonCancel, @NonNull EditText editTextUsername,
      @NonNull TextView textAddContributors, @NonNull TextView textEnterUsername,
      @NonNull LinearLayout usernameEntry) {
    this.rootView = rootView;
    this.buttonAdd = buttonAdd;
    this.buttonCancel = buttonCancel;
    this.editTextUsername = editTextUsername;
    this.textAddContributors = textAddContributors;
    this.textEnterUsername = textEnterUsername;
    this.usernameEntry = usernameEntry;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddContributorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddContributorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_contributor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddContributorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_add;
      Button buttonAdd = ViewBindings.findChildViewById(rootView, id);
      if (buttonAdd == null) {
        break missingId;
      }

      id = R.id.button_cancel;
      Button buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.editTextUsername;
      EditText editTextUsername = ViewBindings.findChildViewById(rootView, id);
      if (editTextUsername == null) {
        break missingId;
      }

      id = R.id.text_add_contributors;
      TextView textAddContributors = ViewBindings.findChildViewById(rootView, id);
      if (textAddContributors == null) {
        break missingId;
      }

      id = R.id.text_enter_username;
      TextView textEnterUsername = ViewBindings.findChildViewById(rootView, id);
      if (textEnterUsername == null) {
        break missingId;
      }

      id = R.id.usernameEntry;
      LinearLayout usernameEntry = ViewBindings.findChildViewById(rootView, id);
      if (usernameEntry == null) {
        break missingId;
      }

      return new FragmentAddContributorBinding((ConstraintLayout) rootView, buttonAdd, buttonCancel,
          editTextUsername, textAddContributors, textEnterUsername, usernameEntry);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
